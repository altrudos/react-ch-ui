{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./api/api.ts","webpack:///./api/charities.ts","webpack:///./components/async.ts","webpack:///./components/div-factory.tsx","webpack:///./components/icon/index.tsx","webpack:///./components/layout/container.tsx","webpack:///./components/layout/row.tsx","webpack:///./components/loading/index.tsx","webpack:///./hooks/use-async.ts","webpack:///./modules/charities/view-charities.tsx","webpack:///./pages/index.tsx","webpack:///./util/cx.ts","webpack:///./util/error.ts","webpack:///./util/string.ts","webpack:///external \"axios\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import axios from 'axios'\nexport const baseURL = process.env.BASEURL\nexport default axios.create({baseURL, withCredentials: true})\n\nexport type Paged<T> = {\n  Data: T[],\n  Limit: number,\n  Offset: number,\n  Total: number,\n}","import Api, {Paged} from \"./api\"\nimport {Charity} from \"../model/charity\"\n\nconst CharityApi = {\n  async all () : Promise<Paged<Charity>> {\n    type CharitiesResponse = {\n      Charities: Paged<Charity>\n    }\n    const resp = await Api.get<CharitiesResponse>(\"/charities\")\n    return resp.data.Charities\n  },\n  async one(id: string) : Promise<Charity> {\n    type CharityResponse = {\n      Charity: Charity\n    }\n    const resp = await Api.get<CharityResponse>(\"/charity/\" + id)\n    return resp.data.Charity\n  },\n}\nexport default CharityApi","\nexport enum AsyncState {\n  Error,\n  Loading,\n  Success,\n  Available\n}\n","import React, {HTMLAttributes} from 'react'\nimport cx from \"../util/cx\"\n\nexport type DivComponent = React.FunctionComponent<HTMLAttributes<HTMLDivElement>>\n\nexport type DivExtraProps = {\n  [key: string]: string\n}\n\nexport default function DivFactory<P extends DivExtraProps>(\n  defaultClassName: string,\n  classConfig?: { [key in keyof P]?: DivExtraProps }\n): DivComponent {\n  return function (\n    {\n      className,\n      children,\n      ...rest\n    }: HTMLAttributes<HTMLDivElement> & P\n  ) {\n\n    const otherClasses = [];\n\n    if (!!classConfig) {\n      for (const i in classConfig) {\n        if (!(i in rest)) continue\n        const curr = classConfig[i];\n\n        // We can do this 'as' because classConfig\n        // can only have keys which are in P.\n        const val = (rest as P )[i];\n\n        // If the value of the prop 'i' is defined\n        // in the configuration, we can use it to\n        // add the classes in other classes.\n        if (val in curr){\n          otherClasses.push(curr[val])\n        }\n      }\n    }\n\n    return (\n      <div className={cx(defaultClassName, className, ...otherClasses)} {...rest}>\n        {children}\n      </div>\n    )\n  }\n}\n\n","import React, {HTMLAttributes} from 'react'\nimport cx from \"../../util/cx\"\n\nexport type IconProps = {\n  suffix: string\n  family: string\n} & HTMLAttributes<HTMLSpanElement>\n\nexport default function Icon(\n  {\n    className,\n    suffix,\n    family,\n    ...rest\n  } : IconProps\n) {\n  return (\n    <i\n      className={cx(family, `${family}-${suffix}`, className)}\n      {...rest}\n    />\n  )\n}","import \"./container.less\"\nimport React from 'react'\nimport DivFactory from \"../div-factory\"\n\nexport const FullScreenCentered = DivFactory(\"fullscreen centered\")\nexport const FullScreen = DivFactory(\"fullscreen\")\nexport const Centered = DivFactory(\"flex-column justify-center align-center\")","import \"./row.less\"\nimport \"./panel.less\"\nimport DivFactory, {DivComponent} from \"../div-factory\"\n\ntype BaseClasses = {\n  flex: string\n  justifyContent: string\n  alignItems: string\n}\n\nconst BasicClasses = {\n  flex: {\n    row: \"flex-row\",\n    column: \"flex-column\",\n  },\n  justifyContent: {\n    spaceBetween: \"justify-between\",\n    spaceAround: \"justify-around\",\n    start: \"justify-start\",\n    end: \"justify-end\",\n    center: \"justify-center\",\n    evenly: \"justify-evenly\",\n    stretch: \"justify-stretch\",\n  },\n  alignItems: {\n    start: \"align-start\",\n    end: \"align-end\",\n    center: \"align-center\",\n    stretch: \"align-stretch\",\n    baseline: \"align-baseline\",\n  },\n}\n\nexport const Row = DivFactory(\"row\")\n\ntype ColSpecificProps = BaseClasses & {\n  size?: string,\n}\nexport const Col = DivFactory<ColSpecificProps>(\"col\", {\n  size: {\n\n  },\n  ...BasicClasses,\n})\n\nexport const PanelHeader = DivFactory(\"panel-header\")\nexport const PanelBody = DivFactory(\"panel-body\")\nexport const PanelFooter = DivFactory(\"panel-footer\")\n\ntype Panel = DivComponent & {\n  Header?: DivComponent,\n  Body?: DivComponent,\n  Footer?: DivComponent,\n}\n\nexport const Panel: Panel = DivFactory(\"panel\")\nPanel.Header = PanelHeader\nPanel.Body = PanelBody\nPanel.Footer = PanelFooter\n\n","import \"./loading.less\"\nimport React, {HTMLAttributes} from 'react'\nimport DivFactory from \"../div-factory\"\nimport Icon from \"../icon\"\nimport cx from \"../../util/cx\"\n\nexport const LoadingPage = DivFactory(\"loading-page\")\nexport const LoadingSection = DivFactory(\"loading-section\")\n\nexport function LoadingIcon(\n  {\n    className,\n    ...rest\n  } : HTMLAttributes<HTMLSpanElement>\n) {\n  return (\n    <Icon suffix=\"spin\" family=\"fa\" className={cx(\"fa-circle-notch\", className)} {...rest} />\n  )\n}","import {AsyncState} from \"../components/async\"\nimport {useRef, useState} from \"react\"\nimport {parseError} from \"../util/error\"\n\nexport type StatusItem = {\n  Status: AsyncState,\n  Message: string,\n}\n\nexport type RunAsyncOptions = {\n  AvailableMsg: string\n  AvailableAfterError: boolean\n  ThrowError: boolean\n}\n\nconst DefaultOptions = {\n  AvailableMsg: \"\",\n  AvailableAfterError: true,\n  ThrowError: false\n}\n\nexport type Async = {\n  status: AsyncState,\n  setStatus: (status: AsyncState, err?: string) => void,\n  errMsg: string,\n  runAsync: (fn: () => Promise<void>, options?: RunAsyncOptions) => Promise<void>\n}\n\nexport default function useAsync(\n  defaultState = AsyncState.Available,\n  duration = 300\n): Async {\n\n  // Stores whether it is currently already running or not. If it is running that means we are adding to\n  // the end of the queue, which also means that we should be running any side effects as it will run itself.\n  const isRunning = useRef(false)\n\n  // This is the handle for the interval while it is running. It will be cleared when there are no more\n  // items left in the queue.\n  const it = useRef(null)\n\n  // Queue will store future statuses that should be shown.\n  const queue = useRef<StatusItem[]>([])\n\n  // Current status and message to show (if any)\n  const [status, setStatus] = useState(defaultState)\n  const [errMsg, setErrMsg] = useState(\"\")\n\n  // Next is the iterative process. It will continue until the queue is cleared, where upon it needs to set the\n  // statuses `isRunning` and `it` properly to reset the state.\n  function next() {\n    if (queue.current.length == 0) {\n      isRunning.current = false\n      clearInterval(it.current)\n      it.current = null\n      return\n    }\n    const curr = queue.current.shift()\n    setStatus(curr.Status)\n    setErrMsg(curr.Message)\n  }\n\n  function _setStatus(status: AsyncState, err: string = \"\") {\n    queue.current.push({\n      Status: status,\n      Message: err,\n    })\n    if (isRunning.current) {\n      return\n    }\n\n    isRunning.current = true\n    it.current = setInterval(next, duration)\n  }\n\n  return {\n    status,\n    setStatus: _setStatus,\n    errMsg,\n    runAsync: async (fn: () => Promise<void>, options: RunAsyncOptions = {...DefaultOptions}) => {\n      _setStatus(AsyncState.Loading)\n      try {\n        await fn()\n        _setStatus(AsyncState.Success)\n        _setStatus(AsyncState.Available, options.AvailableMsg)\n      } catch (err) {\n        console.log({...err})\n        _setStatus(AsyncState.Error, parseError(err))\n        if (options.AvailableAfterError) _setStatus(AsyncState.Available, options.AvailableMsg)\n        if (options.ThrowError) throw err\n      }\n    }\n  }\n}","import React, {useEffect, useState} from 'react'\nimport useAsync from \"../../hooks/use-async\"\nimport {AsyncState} from \"../../components/async\"\nimport {LoadingIcon} from \"../../components/loading\"\nimport {Charity} from \"../../model/charity\"\nimport {FullScreenCentered} from \"../../components/layout/container\"\nimport Icon from \"../../components/icon\"\nimport CharityApi from \"../../api/charities\"\nimport {Panel} from \"../../components/layout/row\"\n\nexport default function CharitiesView() {\n\n  const [charities, setCharities] = useState<Charity[]>([]);\n  const {\n    status,\n    errMsg,\n    runAsync\n  } = useAsync(AsyncState.Loading)\n\n  useEffect(()=>{\n    runAsync(loadCharities, {\n      ThrowError: false,\n      AvailableAfterError: false,\n      AvailableMsg: \"\",\n    })\n  }, [])\n\n  async function loadCharities() {\n    const charities = await CharityApi.all()\n    setCharities(charities.Data)\n  }\n\n  switch(status) {\n    case AsyncState.Loading:\n      return (\n        <FullScreenCentered>\n          <LoadingIcon className=\"fa-8x\"/>\n          <div>...Loading...</div>\n        </FullScreenCentered>\n      )\n    case AsyncState.Error:\n      return (\n        <FullScreenCentered className=\"bg-danger color-danger\">\n          <Icon suffix=\"times\" family=\"fa\" className=\"fa-8x mb-4\"/>\n          <div>{errMsg || \"Oops! There's been an error.\"}</div>\n        </FullScreenCentered>\n      )\n  }\n\n  return (\n    <Panel>\n      <Panel.Header>\n        Charities\n      </Panel.Header>\n      <Panel.Body>\n        <ul>\n          {\n            charities.map( ch => (\n              <li>{ ch.Name }</li>\n            ))\n          }\n        </ul>\n      </Panel.Body>\n    </Panel>\n  )\n\n}","import React from 'react'\nimport CharitiesView from \"../modules/charities/view-charities\"\n\nexport default function HomePage() {\n  return (\n    <div className=\"fullscreen\">\n      <CharitiesView/>\n    </div>\n  )\n}","import {addToStringList} from \"./string\"\n\nexport type ClassNameConfig = string | { [key: string]: boolean };\n\n/**\n * cx groups provided terms together as a list of HTML classes.\n * @param x is either a string or an object with classes as the key and a boolean as the value.\n *  a value of true means to include it in the classlist.\n */\nexport default function cx( ...x : ClassNameConfig[] ) : string {\n  const str : string[] = [];\n\n  x.forEach( x => {\n    if ( typeof(x) === \"string\" ) {\n      addToStringList(str, x)\n      return\n    }\n\n    for(let i in x) {\n      if (x[i]) {\n        addToStringList(str, i)\n      }\n    }\n  } )\n\n  return str.join(\" \")\n}","import {AxiosError} from \"axios\"\n\nexport function parseError(err: Error | AxiosError) : string {\n  if ('response' in err){\n    if (!err.response || !err.response.data) return \"Network Error\"\n    return err.response.data.Message\n  }\n  return err.message\n}","\nexport function stringInList(xs : string[], x : string) : boolean {\n  return !!xs.find(s => s === x)\n}\n\nexport function addToStringList(xs : string[], x : string) {\n  if (stringInList(xs, x)) return\n  xs.push(x)\n}","module.exports = require(\"axios\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAfA;AAgBA;;;;;;;;;;;;AClBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AAQA;AAIA;AAMA;AAJA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AAOA;AAOA;AALA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAEA;AADA;AAKA;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAQA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAdA;AAuBA;AAKA;AACA;AADA;AAOA;AACA;AACA;AAQA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAHA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AAaA;AACA;AACA;AACA;AAHA;AAaA;AAKA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAhBA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAXA;AACA;AAgBA;AAiBA;;;;;;;;;;;;;;;;;;AClEA;AACA;AAEA;AACA;AACA;AAAA;AAIA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACRA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}