{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport useAsync from \"../../hooks/use-async\";\nimport { AsyncState } from \"../../components/async\";\nimport { LoadingIcon } from \"../../components/loading\";\nimport { FullScreenCentered } from \"../../components/layout/container\";\nimport Icon from \"../../components/icon\";\nimport CharityApi from \"../../api/charities\";\nexport default function CharitiesView() {\n  var _useState = useState([]),\n      charities = _useState[0],\n      setCharities = _useState[1];\n\n  var _useAsync = useAsync(AsyncState.Loading),\n      status = _useAsync.status,\n      errMsg = _useAsync.errMsg,\n      runAsync = _useAsync.runAsync;\n\n  useEffect(function () {\n    runAsync(loadCharities, {\n      AvailableAfterError: false\n    });\n  }, []);\n\n  function loadCharities() {\n    var charities;\n    return _regeneratorRuntime.async(function loadCharities$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(CharityApi.all());\n\n          case 2:\n            charities = _context.sent;\n            setCharities(charities.Data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  switch (status) {\n    case AsyncState.Loading:\n      return __jsx(FullScreenCentered, null, __jsx(LoadingIcon, {\n        className: \"fa-8x\"\n      }), __jsx(\"div\", null, \"...Loading...\"));\n\n    case AsyncState.Error:\n      return __jsx(FullScreenCentered, {\n        className: \"bg-danger color-danger\"\n      }, __jsx(Icon, {\n        suffix: \"times\",\n        family: \"fa\",\n        className: \"fa-8x mb-4\"\n      }), __jsx(\"div\", null, errMsg || \"Oops! There's been an error.\"));\n  }\n\n  return __jsx(\"div\", null);\n}","map":{"version":3,"sources":["/Users/bryancua/Sites/charityhonor/modules/charities/view-charities.tsx"],"names":["React","useEffect","useState","useAsync","AsyncState","LoadingIcon","FullScreenCentered","Icon","CharityApi","CharitiesView","charities","setCharities","Loading","status","errMsg","runAsync","loadCharities","AvailableAfterError","all","Data","Error"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AAEA,SAAQC,kBAAR,QAAiC,mCAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA,kBAEJP,QAAQ,CAAY,EAAZ,CAFJ;AAAA,MAE/BQ,SAF+B;AAAA,MAEpBC,YAFoB;;AAAA,kBAOlCR,QAAQ,CAACC,UAAU,CAACQ,OAAZ,CAP0B;AAAA,MAIpCC,MAJoC,aAIpCA,MAJoC;AAAA,MAKpCC,MALoC,aAKpCA,MALoC;AAAA,MAMpCC,QANoC,aAMpCA,QANoC;;AAStCd,EAAAA,SAAS,CAAC,YAAI;AACZc,IAAAA,QAAQ,CAACC,aAAD,EAAgB;AACtBC,MAAAA,mBAAmB,EAAE;AADC,KAAhB,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAAeD,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC0BR,UAAU,CAACU,GAAX,EAD1B;;AAAA;AACQR,YAAAA,SADR;AAEEC,YAAAA,YAAY,CAACD,SAAS,CAACS,IAAX,CAAZ;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,UAAON,MAAP;AACE,SAAKT,UAAU,CAACQ,OAAhB;AACE,aACE,MAAC,kBAAD,QACE,MAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB,QADF,EAEE,mCAFF,CADF;;AAMF,SAAKR,UAAU,CAACgB,KAAhB;AACE,aACE,MAAC,kBAAD;AAAoB,QAAA,SAAS,EAAC;AAA9B,SACE,MAAC,IAAD;AAAM,QAAA,MAAM,EAAC,OAAb;AAAqB,QAAA,MAAM,EAAC,IAA5B;AAAiC,QAAA,SAAS,EAAC;AAA3C,QADF,EAEE,mBAAMN,MAAM,IAAI,8BAAhB,CAFF,CADF;AATJ;;AAiBA,SACE,kBADF;AAID","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport useAsync from \"../../hooks/use-async\"\nimport {AsyncState} from \"../../components/async\"\nimport {LoadingIcon} from \"../../components/loading\"\nimport {Charity} from \"../../model/charity\"\nimport {FullScreenCentered} from \"../../components/layout/container\"\nimport Icon from \"../../components/icon\"\nimport CharityApi from \"../../api/charities\"\n\nexport default function CharitiesView() {\n\n  const [charities, setCharities] = useState<Charity[]>([]);\n  const {\n    status,\n    errMsg,\n    runAsync\n  } = useAsync(AsyncState.Loading)\n\n  useEffect(()=>{\n    runAsync(loadCharities, {\n      AvailableAfterError: false,\n    })\n  }, [])\n\n  async function loadCharities() {\n    const charities = await CharityApi.all()\n    setCharities(charities.Data)\n  }\n\n  switch(status) {\n    case AsyncState.Loading:\n      return (\n        <FullScreenCentered>\n          <LoadingIcon className=\"fa-8x\"/>\n          <div>...Loading...</div>\n        </FullScreenCentered>\n      )\n    case AsyncState.Error:\n      return (\n        <FullScreenCentered className=\"bg-danger color-danger\">\n          <Icon suffix=\"times\" family=\"fa\" className=\"fa-8x mb-4\"/>\n          <div>{errMsg || \"Oops! There's been an error.\"}</div>\n        </FullScreenCentered>\n      )\n  }\n\n  return (\n    <div></div>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}