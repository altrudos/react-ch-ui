{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport useAsync from \"../../hooks/use-async\";\nimport { AsyncState } from \"../../components/async\";\nimport { LoadingIcon } from \"../../components/loading\";\nimport { FullScreenCentered } from \"../../components/layout/container\";\nimport Icon from \"../../components/icon\";\nimport CharityApi from \"../../api/charities\";\nimport { Panel } from \"../../components/layout/row\";\nexport default function CharitiesView() {\n  const {\n    0: charities,\n    1: setCharities\n  } = useState([]);\n  const {\n    status,\n    errMsg,\n    runAsync\n  } = useAsync(AsyncState.Loading);\n  useEffect(() => {\n    runAsync(loadCharities, {\n      ThrowError: false,\n      AvailableAfterError: false,\n      AvailableMsg: \"\"\n    });\n  }, []);\n\n  async function loadCharities() {\n    const charities = await CharityApi.all();\n    setCharities(charities.Data);\n  }\n\n  switch (status) {\n    case AsyncState.Loading:\n      return __jsx(FullScreenCentered, null, __jsx(LoadingIcon, {\n        className: \"fa-8x\"\n      }), __jsx(\"div\", null, \"...Loading...\"));\n\n    case AsyncState.Error:\n      return __jsx(FullScreenCentered, {\n        className: \"bg-danger color-danger\"\n      }, __jsx(Icon, {\n        suffix: \"times\",\n        family: \"fa\",\n        className: \"fa-8x mb-4\"\n      }), __jsx(\"div\", null, errMsg || \"Oops! There's been an error.\"));\n  }\n\n  return __jsx(Panel, null, __jsx(Panel.Header, null, \"Charities\"), __jsx(Panel.Body, null, __jsx(\"ul\", null, charities.map(ch => __jsx(\"li\", null, ch.Name)))));\n}","map":{"version":3,"sources":["/Users/bryancua/Sites/charityhonor/modules/charities/view-charities.tsx"],"names":["React","useEffect","useState","useAsync","AsyncState","LoadingIcon","FullScreenCentered","Icon","CharityApi","Panel","CharitiesView","charities","setCharities","status","errMsg","runAsync","Loading","loadCharities","ThrowError","AvailableAfterError","AvailableMsg","all","Data","Error","map","ch","Name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AAEA,SAAQC,kBAAR,QAAiC,mCAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAAQC,KAAR,QAAoB,6BAApB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAEtC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAY,EAAZ,CAA1C;AACA,QAAM;AACJW,IAAAA,MADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFZ,QAAQ,CAACC,UAAU,CAACY,OAAZ,CAJZ;AAMAf,EAAAA,SAAS,CAAC,MAAI;AACZc,IAAAA,QAAQ,CAACE,aAAD,EAAgB;AACtBC,MAAAA,UAAU,EAAE,KADU;AAEtBC,MAAAA,mBAAmB,EAAE,KAFC;AAGtBC,MAAAA,YAAY,EAAE;AAHQ,KAAhB,CAAR;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,iBAAeH,aAAf,GAA+B;AAC7B,UAAMN,SAAS,GAAG,MAAMH,UAAU,CAACa,GAAX,EAAxB;AACAT,IAAAA,YAAY,CAACD,SAAS,CAACW,IAAX,CAAZ;AACD;;AAED,UAAOT,MAAP;AACE,SAAKT,UAAU,CAACY,OAAhB;AACE,aACE,MAAC,kBAAD,QACE,MAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB,QADF,EAEE,mCAFF,CADF;;AAMF,SAAKZ,UAAU,CAACmB,KAAhB;AACE,aACE,MAAC,kBAAD;AAAoB,QAAA,SAAS,EAAC;AAA9B,SACE,MAAC,IAAD;AAAM,QAAA,MAAM,EAAC,OAAb;AAAqB,QAAA,MAAM,EAAC,IAA5B;AAAiC,QAAA,SAAS,EAAC;AAA3C,QADF,EAEE,mBAAMT,MAAM,IAAI,8BAAhB,CAFF,CADF;AATJ;;AAiBA,SACE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,MAAP,oBADF,EAIE,MAAC,KAAD,CAAO,IAAP,QACE,kBAEIH,SAAS,CAACa,GAAV,CAAeC,EAAE,IACf,kBAAMA,EAAE,CAACC,IAAT,CADF,CAFJ,CADF,CAJF,CADF;AAiBD","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport useAsync from \"../../hooks/use-async\"\nimport {AsyncState} from \"../../components/async\"\nimport {LoadingIcon} from \"../../components/loading\"\nimport {Charity} from \"../../model/charity\"\nimport {FullScreenCentered} from \"../../components/layout/container\"\nimport Icon from \"../../components/icon\"\nimport CharityApi from \"../../api/charities\"\nimport {Panel} from \"../../components/layout/row\"\n\nexport default function CharitiesView() {\n\n  const [charities, setCharities] = useState<Charity[]>([]);\n  const {\n    status,\n    errMsg,\n    runAsync\n  } = useAsync(AsyncState.Loading)\n\n  useEffect(()=>{\n    runAsync(loadCharities, {\n      ThrowError: false,\n      AvailableAfterError: false,\n      AvailableMsg: \"\",\n    })\n  }, [])\n\n  async function loadCharities() {\n    const charities = await CharityApi.all()\n    setCharities(charities.Data)\n  }\n\n  switch(status) {\n    case AsyncState.Loading:\n      return (\n        <FullScreenCentered>\n          <LoadingIcon className=\"fa-8x\"/>\n          <div>...Loading...</div>\n        </FullScreenCentered>\n      )\n    case AsyncState.Error:\n      return (\n        <FullScreenCentered className=\"bg-danger color-danger\">\n          <Icon suffix=\"times\" family=\"fa\" className=\"fa-8x mb-4\"/>\n          <div>{errMsg || \"Oops! There's been an error.\"}</div>\n        </FullScreenCentered>\n      )\n  }\n\n  return (\n    <Panel>\n      <Panel.Header>\n        Charities\n      </Panel.Header>\n      <Panel.Body>\n        <ul>\n          {\n            charities.map( ch => (\n              <li>{ ch.Name }</li>\n            ))\n          }\n        </ul>\n      </Panel.Body>\n    </Panel>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}