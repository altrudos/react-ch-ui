{"ast":null,"code":"import { addToStringList } from \"./string\";\n\n/**\n * cx groups provided terms together as a list of HTML classes.\n * @param x is either a string or an object with classes as the key and a boolean as the value.\n *  a value of true means to include it in the classlist.\n */\nexport default function cx() {\n  var str = [];\n\n  for (var _len = arguments.length, x = new Array(_len), _key = 0; _key < _len; _key++) {\n    x[_key] = arguments[_key];\n  }\n\n  x.forEach(function (x) {\n    if (typeof x === \"string\") {\n      addToStringList(str, x);\n      return;\n    }\n\n    for (var i in x) {\n      if (x[i]) {\n        addToStringList(str, i);\n      }\n    }\n  });\n  return str.join(\" \");\n}","map":{"version":3,"sources":["/Users/bryancua/Sites/charityhonor/util/cx.ts"],"names":["addToStringList","cx","str","x","forEach","i","join"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,UAA9B;;AAIA;;;;;AAKA,eAAe,SAASC,EAAT,GAAiD;AAC9D,MAAMC,GAAc,GAAG,EAAvB;;AAD8D,oCAAjCC,CAAiC;AAAjCA,IAAAA,CAAiC;AAAA;;AAG9DA,EAAAA,CAAC,CAACC,OAAF,CAAW,UAAAD,CAAC,EAAI;AACd,QAAK,OAAOA,CAAP,KAAc,QAAnB,EAA8B;AAC5BH,MAAAA,eAAe,CAACE,GAAD,EAAMC,CAAN,CAAf;AACA;AACD;;AAED,SAAI,IAAIE,CAAR,IAAaF,CAAb,EAAgB;AACd,UAAIA,CAAC,CAACE,CAAD,CAAL,EAAU;AACRL,QAAAA,eAAe,CAACE,GAAD,EAAMG,CAAN,CAAf;AACD;AACF;AACF,GAXD;AAaA,SAAOH,GAAG,CAACI,IAAJ,CAAS,GAAT,CAAP;AACD","sourcesContent":["import {addToStringList} from \"./string\"\n\nexport type ClassNameConfig = string | { [key: string]: boolean };\n\n/**\n * cx groups provided terms together as a list of HTML classes.\n * @param x is either a string or an object with classes as the key and a boolean as the value.\n *  a value of true means to include it in the classlist.\n */\nexport default function cx( ...x : ClassNameConfig[] ) : string {\n  const str : string[] = [];\n\n  x.forEach( x => {\n    if ( typeof(x) === \"string\" ) {\n      addToStringList(str, x)\n      return\n    }\n\n    for(let i in x) {\n      if (x[i]) {\n        addToStringList(str, i)\n      }\n    }\n  } )\n\n  return str.join(\" \")\n}"]},"metadata":{},"sourceType":"module"}