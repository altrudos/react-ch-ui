{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cx from \"../../util/cx\";\nexport default function Icon(_ref) {\n  let {\n    className,\n    suffix,\n    family\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"suffix\", \"family\"]);\n\n  return __jsx(\"i\", _extends({\n    className: cx(family, `${family}-${suffix}`, className)\n  }, rest));\n}","map":{"version":3,"sources":["/Users/bryancua/Sites/charityhonor/components/icon/index.tsx"],"names":["React","cx","Icon","className","suffix","family","rest"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,EAAP,MAAe,eAAf;AAOA,eAAe,SAASC,IAAT,OAOb;AAAA,MANA;AACEC,IAAAA,SADF;AAEEC,IAAAA,MAFF;AAGEC,IAAAA;AAHF,GAMA;AAAA,MAFKC,IAEL;;AACA,SACE;AACE,IAAA,SAAS,EAAEL,EAAE,CAACI,MAAD,EAAU,GAAEA,MAAO,IAAGD,MAAO,EAA7B,EAAgCD,SAAhC;AADf,KAEMG,IAFN,EADF;AAMD","sourcesContent":["import React, {HTMLAttributes} from 'react'\nimport cx from \"../../util/cx\"\n\nexport type IconProps = {\n  suffix: string\n  family: string\n} & HTMLAttributes<HTMLSpanElement>\n\nexport default function Icon(\n  {\n    className,\n    suffix,\n    family,\n    ...rest\n  } : IconProps\n) {\n  return (\n    <i\n      className={cx(family, `${family}-${suffix}`, className)}\n      {...rest}\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}