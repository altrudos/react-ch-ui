{"version":3,"file":"static/webpack/static/development/pages/index.js.4df8c8ba1f0f3210bbfe.hot-update.js","sources":["webpack:///./components/div-factory.tsx","webpack:///./components/layout/container.tsx","webpack:///./modules/charities/view-charities.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./util/cx.ts","webpack:///./util/string.ts"],"sourcesContent":["import React, {HTMLAttributes} from 'react'\nimport cx from \"../util/cx\"\n\nexport type DivComponent = React.FunctionComponent<HTMLAttributes<HTMLDivElement>>\n\nexport type DivExtraProps = {\n  [key: string]: string\n}\n\nexport default function DivFactory<P extends DivExtraProps>(\n  defaultClassName: string,\n  classConfig?: { [key in keyof P]?: DivExtraProps }\n): DivComponent {\n  return function (\n    {\n      className,\n      children,\n      ...rest\n    }: HTMLAttributes<HTMLDivElement> & P\n  ) {\n\n    const otherClasses = [];\n\n    if (!!classConfig) {\n      for (const i in classConfig) {\n        if (!(i in rest)) continue\n        const curr = classConfig[i];\n\n        // We can do this 'as' because classConfig\n        // can only have keys which are in P.\n        const val = (rest as P )[i];\n\n        // If the value of the prop 'i' is defined\n        // in the configuration, we can use it to\n        // add the classes in other classes.\n        if (val in curr){\n          otherClasses.push(curr[val])\n        }\n      }\n    }\n\n    return (\n      <div className={cx(defaultClassName, className, ...otherClasses)} {...rest}>\n        {children}\n      </div>\n    )\n  }\n}\n\n","import \"./container.less\"\nimport React from 'react'\nimport DivFactory from \"../div-factory\"\n\nexport const FullScreenCentered = DivFactory(\"fullscreen centered\")\nexport const FullScreen = DivFactory(\"fullscreen\")\nexport const Centered = DivFactory(\"flex-column justify-center align-center\")","import React, {useState} from 'react'\nimport useAsync from \"../../hooks/use-async\"\nimport {AsyncState} from \"../../components/async\"\nimport {LoadingPage} from \"../../components/loading\"\nimport {Charity} from \"../../model/charity\"\nimport {FullScreenCentered} from \"../../components/layout/container\"\n\nexport default function CharitiesView() {\n\n  const [charities, setCharities] = useState<Charity[]>([]);\n  const {\n    status,\n    runAsync\n  } = useAsync(AsyncState.Loading)\n\n\n  switch(status) {\n    case AsyncState.Loading:\n      return (\n        <FullScreenCentered className=\"color-secondary\">\n          <LoadingIcon className=\"fa-8x mb-4\"/>\n          <div>...Loading...</div>\n        </FullScreenCentered>\n      )\n  }\n\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import {addToStringList} from \"./string\"\n\nexport type ClassNameConfig = string | { [key: string]: boolean };\n\n/**\n * cx groups provided terms together as a list of HTML classes.\n * @param x is either a string or an object with classes as the key and a boolean as the value.\n *  a value of true means to include it in the classlist.\n */\nexport default function cx( ...x : ClassNameConfig[] ) : string {\n  const str : string[] = [];\n\n  x.forEach( x => {\n    if ( typeof(x) === \"string\" ) {\n      addToStringList(str, x)\n      return\n    }\n\n    for(let i in x) {\n      if (x[i]) {\n        addToStringList(str, i)\n      }\n    }\n  } )\n\n  return str.join(\" \")\n}","\nexport function stringInList(xs : string[], x : string) : boolean {\n  return !!xs.find(s => s === x)\n}\n\nexport function addToStringList(xs : string[], x : string) {\n  if (stringInList(xs, x)) return\n  xs.push(x)\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AAIA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAJA;AAUA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;AAKA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}