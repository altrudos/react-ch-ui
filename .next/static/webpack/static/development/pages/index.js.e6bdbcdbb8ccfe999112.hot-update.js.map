{"version":3,"file":"static/webpack/static/development/pages/index.js.e6bdbcdbb8ccfe999112.hot-update.js","sources":["webpack:///./components/layout/row.tsx","webpack:///./modules/charities/view-charities.tsx"],"sourcesContent":["import \"./row.less\"\nimport \"./panel.less\"\nimport DivFactory, {DivComponent} from \"../div-factory\"\n\ntype BaseClasses = {\n  flex: string\n  justifyContent: string\n  alignItems: string\n}\n\nconst BasicClasses = {\n  flex: {\n    row: \"flex-row\",\n    column: \"flex-column\",\n  },\n  justifyContent: {\n    spaceBetween: \"justify-between\",\n    spaceAround: \"justify-around\",\n    start: \"justify-start\",\n    end: \"justify-end\",\n    center: \"justify-center\",\n    evenly: \"justify-evenly\",\n    stretch: \"justify-stretch\",\n  },\n  alignItems: {\n    start: \"align-start\",\n    end: \"align-end\",\n    center: \"align-center\",\n    stretch: \"align-stretch\",\n    baseline: \"align-baseline\",\n  },\n}\n\nexport const Row = DivFactory(\"row\")\n\ntype ColSpecificProps = BaseClasses & {\n  size?: string,\n}\nexport const Col = DivFactory<ColSpecificProps>(\"col\", {\n  size: {\n\n  },\n  ...BasicClasses,\n})\n\nexport const PanelHeader = DivFactory(\"panel-header\")\nexport const PanelBody = DivFactory(\"panel-body\")\nexport const PanelFooter = DivFactory(\"panel-footer\")\n\ntype Panel = DivComponent & {\n  Header?: DivComponent,\n  Body?: DivComponent,\n  Footer?: DivComponent,\n}\n\nexport const Panel: Panel = DivFactory(\"panel\")\nPanel.Header = PanelHeader\nPanel.Body = PanelBody\nPanel.Footer = PanelFooter\n\n","import React, {useEffect, useState} from 'react'\nimport useAsync from \"../../hooks/use-async\"\nimport {AsyncState} from \"../../components/async\"\nimport {LoadingIcon} from \"../../components/loading\"\nimport {Charity} from \"../../model/charity\"\nimport {FullScreenCentered} from \"../../components/layout/container\"\nimport Icon from \"../../components/icon\"\nimport CharityApi from \"../../api/charities\"\nimport {Panel} from \"../../components/layout/row\"\n\nexport default function CharitiesView() {\n\n  const [charities, setCharities] = useState<Charity[]>([]);\n  const {\n    status,\n    errMsg,\n    runAsync\n  } = useAsync(AsyncState.Loading)\n\n  useEffect(()=>{\n    runAsync(loadCharities, {\n      ThrowError: false,\n      AvailableAfterError: false,\n      AvailableMsg: \"\",\n    })\n  }, [])\n\n  async function loadCharities() {\n    const charities = await CharityApi.all()\n    setCharities(charities.Data)\n  }\n\n  switch(status) {\n    case AsyncState.Loading:\n      return (\n        <FullScreenCentered>\n          <LoadingIcon className=\"fa-8x\"/>\n          <div>...Loading...</div>\n        </FullScreenCentered>\n      )\n    case AsyncState.Error:\n      return (\n        <FullScreenCentered className=\"bg-danger color-danger\">\n          <Icon suffix=\"times\" family=\"fa\" className=\"fa-8x mb-4\"/>\n          <div>{errMsg || \"Oops! There's been an error.\"}</div>\n        </FullScreenCentered>\n      )\n  }\n\n  return (\n    <Panel>\n      <Panel.Header>\n        Charities\n      </Panel.Header>\n      <Panel.Body>\n        <ul>\n          {\n            charities.map( ch => (\n              <li>{ ch.Name }</li>\n            ))\n          }\n        </ul>\n      </Panel.Body>\n    </Panel>\n  )\n\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAdA;AAuBA;AAKA;AACA;AADA;AAOA;AACA;AACA;AAQA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAXA;AACA;AAgBA;AAQA;AAAA;AASA;;;;A","sourceRoot":""}